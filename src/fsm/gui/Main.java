/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 11.06.2012, 03:53:43
 */
package fsm.gui;

import fsm.Edge;
import fsm.Fsm;
import fsm.Graph;
import fsm.Vertex;
import fsm.PathMode;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.AbstractButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

/**
 *
 * @author Konnarr
 */
public class Main extends javax.swing.JFrame {

    private JFrame codingWindow;
    private ArrayList<JFrame> graphWindows = new ArrayList();
    private ArrayList<JFrame> simulationWindows = new ArrayList();
    private JFileChooser fs = new JFileChooser();
    
    private void initGraphWindow(Graph g) {
        JFrame graphWindow = new JFrame("Graph");
        graphWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        graphWindow.setSize(400, 400);
        graphWindow.setLocation(200, 200);
        GraphPanel gr = new GraphPanel(g);
        g.addObserver(gr);
        graphWindow.getContentPane().add(gr);
        graphWindow.setVisible(true);
        graphWindow.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                jCheckBoxMenuItem1.setSelected(false);
            }
        });
        graphWindows.add(graphWindow);
    }
    
    private void initCodingWindow() {
        codingWindow = new JFrame("Eingabe kodieren für universelle Abstandsautomaten");
        codingWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        codingWindow.setSize(550, 300);
        codingWindow.setLocation(200, 200);
        InputCoder ic = new InputCoder();
        codingWindow.getContentPane().add(ic);
        codingWindow.setVisible(true);
        codingWindow.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                jCheckBoxMenuItem4.setSelected(false);
            }
        });
    }
    
    private void initSimulationWindow(Fsm fsm) {
        JFrame simulationWindow = new JFrame("Simulation");
        simulationWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        simulationWindow.setLocation(550, 50);
        SimulationPanel s = new SimulationPanel(fsm);
        simulationWindow.setSize(s.getPreferredSize());
        simulationWindow.getContentPane().add(s);
        simulationWindow.setVisible(true);
        /*simulationWindow.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                jCheckBoxMenuItem1.setSelected(false);
            }
        });*/
        simulationWindows.add(simulationWindow);
    }    
    
    /** Creates new form Main */
    public Main() {
        initComponents();
        jTabbedPane1.add("Automat 0",new GraphTab(new Fsm()));
        try {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                mLooknFeel.add(new JMenuItem(info.getName()) {

                    {
                        addActionListener(new java.awt.event.ActionListener() {

                            @Override
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                try {
                                    for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                                        if (((AbstractButton) evt.getSource()).getText().equals(info.getName())) {
                                            UIManager.setLookAndFeel(info.getClassName());
                                            break;
                                        }
                                    }
                                } catch (Exception f) {
                                }

                                SwingUtilities.updateComponentTreeUI(Main.this);
                                //SwingUtilities.updateComponentTreeUI(graphWindow);
                                pack();
                            }
                        });
                    }
                });
            }
        } catch (Exception e) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mLooknFeel = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem16 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem20 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("?!#");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Datei");

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("neuer Automat");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setText("neuer Graph");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);
        jMenu1.add(jSeparator2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("speichern");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("laden");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Graphen als PNG exportieren");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator3);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem11.setText("schließen");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem1.setText("beenden");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ansicht");

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Graph");
        jCheckBoxMenuItem1.setEnabled(false);
        jCheckBoxMenuItem1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem1ItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);

        mLooknFeel.setText("Look & Feel");
        jMenu2.add(mLooknFeel);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Graph");

        jMenuItem9.setText("Beispielgraph erzeugen");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem7.setText("Graph ausrichten");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jCheckBoxMenuItem2.setText("rechtwinklige Kanten");
        jCheckBoxMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem2ItemStateChanged(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Abstandsautomaten");

        jMenuItem13.setText("spezielle Automaten");
        jMenuItem13.setEnabled(false);
        jMenu5.add(jMenuItem13);

        jMenuItem12.setText("Hamming");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem12);

        jMenuItem14.setText("Levenshtein");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem14);

        jMenuItem15.setText("Damerau-Levenshtein");
        jMenuItem15.setEnabled(false);
        jMenu5.add(jMenuItem15);
        jMenu5.add(jSeparator1);

        jMenuItem16.setText("universelle Automaten");
        jMenuItem16.setEnabled(false);
        jMenu5.add(jMenuItem16);

        jCheckBoxMenuItem3.setText("deterministisch");
        jCheckBoxMenuItem3.setEnabled(false);
        jMenu5.add(jCheckBoxMenuItem3);

        jMenuItem17.setText("Hamming");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem17);

        jMenuItem18.setText("Levenshtein");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem18);

        jMenuItem19.setText("Damerau-Levenshtein");
        jMenuItem19.setEnabled(false);
        jMenu5.add(jMenuItem19);
        jMenu5.add(jSeparator4);

        jMenuItem20.setText("univ. Levenshtein nach  Mihov & Schulz");
        jMenuItem20.setEnabled(false);
        jMenu5.add(jMenuItem20);
        jMenu5.add(jSeparator5);

        jCheckBoxMenuItem4.setText("Eingabekodierung");
        jCheckBoxMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem4ActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItem4);

        jMenuBar1.add(jMenu5);

        jMenu3.setText("Hilfe");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Bedienung Graph");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Info");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jCheckBoxMenuItem1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ItemStateChanged
        if (jCheckBoxMenuItem1.isSelected()) {
//            initGraphWindow(jTabbedPane1);
        } else {
//            graphWindow.dispose();
        }        
    }//GEN-LAST:event_jCheckBoxMenuItem1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Graph g = ((GraphTab) jTabbedPane1.getSelectedComponent()).getGraph();
        Vertex n = g.addVertex(new Point(200, 100));
        n.setFinal(true);
        n.setInitial(true);
        n.setText("q_0");
        Vertex n2 = g.addVertex(new Point(5, 100));
        n2.setText("q_1");
        n2.setAutoWidth(true);
        
        Edge e = g.addEdge(n, n2, false);
        e.getSupportPoints().add(new Point(125,90));
        e.getTransitions().add("0");
        e.setText(false);
        
        e = g.addEdge(n2, n, false);
        e.getSupportPoints().add(new Point(25,30));
        e.getSupportPoints().add(new Point(320,30));
        e.getSupportPoints().add(new Point(320,120));
        e.setPathMode(PathMode.CUBIC_BEZIER);
        e.getTransitions().add("1");
        e.setText(false);
        
        e = g.addEdge(n, n, false);
        e.getSupportPoints().add(new Point(210,160));
        e.getSupportPoints().add(new Point(230,160));
        e.getTransitions().add("1");
        e.setText(false);
        
        n = g.addVertex(new Point(100,220));
        n.setText("o_ o");
        e = g.addEdge(n, n, false);
        e.getSupportPoints().add(new Point((int)n.getShape().getCenterX(),(int)(n.getShape().getY()+n.getShape().getHeight()-1)));
        e = g.addEdge(n, n, false);
        e.setDegOut(Edge.NORTH - 30);
        e.setDegIn(Edge.NORTH - 30);
        e = g.addEdge(n, n, false);
        e.setDegOut(Edge.NORTH + 30);
        e.setDegIn(Edge.NORTH + 30);
        g.notifyObs();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        (new Info(this, true)).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        (new InfoGraph(this,true)).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (fs.showSaveDialog(this)==JFileChooser.APPROVE_OPTION) {
            try {
                ((GraphTab) jTabbedPane1.getSelectedComponent()).getGraphPanel().saveToPNG(fs.getSelectedFile());
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Konnte die Datei nicht speichern", "Fehler beim Speichern", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if (fs.showSaveDialog(this)==JFileChooser.APPROVE_OPTION) {
            try {
                FileOutputStream fout = new FileOutputStream(fs.getSelectedFile());
                ObjectOutputStream oos = new ObjectOutputStream(fout);
                oos.writeObject(((GraphTab) jTabbedPane1.getSelectedComponent()).getGraph());
                oos.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Konnte die Datei nicht speichern", "Fehler beim Speichern", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (fs.showOpenDialog(this)==JFileChooser.APPROVE_OPTION) {
            try {
                FileInputStream fin = new FileInputStream(fs.getSelectedFile());
                ObjectInputStream ois = new ObjectInputStream(fin);
                jTabbedPane1.add(fs.getSelectedFile().getName(),new GraphTab((Graph) ois.readObject()));
                ois.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Konnte die Datei nicht öffnen", "Fehler beim Laden", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(this, "Klasse nicht gefunden", "Fehler beim Laden", JOptionPane.ERROR_MESSAGE);
            
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Graph g = ((GraphTab) jTabbedPane1.getSelectedComponent()).getGraph();
        g.alignVertices();
        g.notifyObs();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jCheckBoxMenuItem2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ItemStateChanged
        Edge.setPerpendicular(jCheckBoxMenuItem2.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItem2ItemStateChanged

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        jTabbedPane1.add("Automat "+jTabbedPane1.getComponentCount(),new GraphTab(new Fsm()));
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getComponentCount()-1);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        if (((GraphTab) jTabbedPane1.getSelectedComponent()).getGraph() instanceof Fsm) {
            Fsm fsm = (Fsm) ((GraphTab) jTabbedPane1.getSelectedComponent()).getGraph();
            if (jTextField1.getText().length()>0) fsm.setAnySymbol(jTextField1.getText().charAt(0));
            if (jTextField1.getText().length()>1) fsm.setElseSymbol(jTextField1.getText().charAt(1));
            if (jTextField1.getText().length()>2) fsm.setEpsSymbol(jTextField1.getText().charAt(2));
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        jTabbedPane1.remove(jTabbedPane1.getSelectedComponent());
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        jTabbedPane1.add("Graph "+jTabbedPane1.getComponentCount(),new GraphTab(new Graph(false)));
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getComponentCount()-1);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        String s = JOptionPane.showInputDialog("Musterwort?");
        if (s == null) return;
        int k;
        try {
            k = Integer.parseInt(JOptionPane.showInputDialog("Abstand?"));
        } catch (NumberFormatException e) {
            return;
        }
        if (k<0) return;
        Fsm fsm = Fsm.distanceAutomaton(k, s, (evt.getSource()==jMenuItem12?0:1));
        jTabbedPane1.add(((JMenuItem)evt.getSource()).getText()+" "+s+" ("+k+")",new GraphTab(fsm));
        fsm.notifyObs();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        int k;
        try {
            k = Integer.parseInt(JOptionPane.showInputDialog("Abstand?"));
        } catch (NumberFormatException e) {
            return;
        }
        if (k<0) return;
        Fsm fsm = Fsm.uniHamming(k);
        jTabbedPane1.add("univ. "+(jCheckBoxMenuItem3.isSelected()?"det. ":"")+((JMenuItem)evt.getSource()).getText()+" ("+k+")",new GraphTab(fsm));
        fsm.notifyObs();
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        int k;
        try {
            k = Integer.parseInt(JOptionPane.showInputDialog("Abstand?"));
        } catch (NumberFormatException e) {
            return;
        }
        if (k<0) return;
        Fsm fsm = Fsm.uniNLevenshtein(k);
        jTabbedPane1.add("univ. "+(jCheckBoxMenuItem3.isSelected()?"det. ":"")+((JMenuItem)evt.getSource()).getText()+" ("+k+")",new GraphTab(fsm));
        fsm.notifyObs();
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jCheckBoxMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem4ActionPerformed
        if (jCheckBoxMenuItem4.isSelected()) {
            initCodingWindow();
        } else {
            codingWindow.dispose();
        }
    }//GEN-LAST:event_jCheckBoxMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenu mLooknFeel;
    // End of variables declaration//GEN-END:variables

}
