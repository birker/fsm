/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fsm.gui;

import fsm.Edge;
import fsm.Element;
import fsm.Graph;
import fsm.Vertex;
import java.awt.Color;
import java.awt.Point;
import java.util.HashMap;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author Konnarr
 */
public class ObjectInspector extends javax.swing.JPanel implements Observer {
private static final long serialVersionUID = 1L;
    
    public static final HashMap<Color, String> ColorNames = new HashMap<Color, String>(25,0.76f);
    {
        ColorNames.put(Color.BLACK,"schwarz");
        ColorNames.put(Color.WHITE,"weiß");
        ColorNames.put(Color.RED,"rot");
        ColorNames.put(Color.GREEN,"hellgrün");
        ColorNames.put(Color.BLUE,"blau");
        ColorNames.put(Color.CYAN,"cyan");
        ColorNames.put(Color.YELLOW,"gelb");
        ColorNames.put(Color.MAGENTA,"magenta");
        ColorNames.put(Color.LIGHT_GRAY,"hellgrau");//192
        ColorNames.put(Color.GRAY,"grau");//128
        ColorNames.put(Color.DARK_GRAY,"dunkelgrau"); //64
        ColorNames.put(Color.ORANGE,"orange");//255, 200, 0
        ColorNames.put(Color.PINK,"rosa");//255, 175, 175
        //additional colors
        ColorNames.put(new Color(128, 0, 0),"dunkelrot");
        ColorNames.put(new Color(0,128,0), "dunkelgrün");
        ColorNames.put(new Color(0,0,128), "dunkelblau");
        ColorNames.put(new Color(128,128,0), "olivgrün");
        ColorNames.put(new Color(128,0,128), "lila");
        ColorNames.put(new Color(0,128,128), "aquamarin");
    }
    
    private final Graph g;
    
    /**
     * Creates new form ObjectInspector
     */
    public ObjectInspector(Graph g) {
        this.g = g;
        initComponents();
        jTable1.setDefaultRenderer(Object.class, new UniversalTableCellRenderer());
        jTable1.setDefaultEditor(Object.class, new UniversalTableCellEditor(g));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<Object>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jComboBox1.setModel(new ComboBoxModels.ElementComboBoxModel(g));
        jComboBox1.setRenderer(new ComboBoxModels.ElementComboBoxRenderer());
        jComboBox1.setSelectedIndex(0);
        jComboBox1.setMinimumSize(new java.awt.Dimension(0, 0));
        jComboBox1.setPreferredSize(new java.awt.Dimension(0, 23));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jScrollPane1.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(0, 23));

        jTable1.setModel(new fsm.gui.ObjectInspectorTableModel(g));
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("löschen");
        jButton1.setToolTipText("löscht das ausgewählte Element (und bei Knoten inzidente Kanten)");
        jButton1.setEnabled(false);
        jButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton1.setPreferredSize(new java.awt.Dimension(0, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("neuer Knoten");
        jButton2.setToolTipText("erstellt einen neuen Knoten (an (0,0))");
        jButton2.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton2.setPreferredSize(new java.awt.Dimension(0, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("neue Kante");
        jButton3.setToolTipText("erstellt eine neue Kante (Start und Ziel der erste Knoten)");
        jButton3.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton3.setPreferredSize(new java.awt.Dimension(0, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Default");
        jButton4.setToolTipText("setzt graphische Eigenschaften zurück auf die Werte die im Graphen definiert sind.");
        jButton4.setEnabled(false);
        jButton4.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton4.setPreferredSize(new java.awt.Dimension(0, 23));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        g.setChoice(g.addVertex(new Point(0,0)));
        g.notifyObs();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (g.getVertices().isEmpty()) {
            Vertex n = g.addVertex(new Point(0,0));
            g.setChoice(g.addEdge(n, n));
        } else {
            g.setChoice(g.addEdge(g.getVertices().get(0), g.getVertices().get(0)));
        }
        g.notifyObs();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (g.getChoice() instanceof Vertex) {
            g.removeVertex((Vertex)g.getChoice());
        } else if (g.getChoice() instanceof Edge) {
            g.removeEdge((Edge) g.getChoice());
        }
        g.notifyObs();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        //don't - table looses focus when editor gets it.
        //if (jTable1.getDefaultEditor(Object.class).stopCellEditing());
        //else jTable1.getDefaultEditor(Object.class).cancelCellEditing();
    }//GEN-LAST:event_jTable1FocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (g.getChoice() instanceof Vertex) {
            ((Vertex)g.getChoice()).setDefaultValues();
        } else if (g.getChoice() instanceof Edge) {
            ((Edge)g.getChoice()).setDefaultValues();
        }
        g.notifyObs();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem() instanceof String) {
            g.setChoice(null);
        } else {
            g.setChoice((Element) jComboBox1.getSelectedItem());
        }
        g.notifyObs();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<Object> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

@Override
    public void update(Observable o, Object arg) {
        if (g.getChoice() == null) {
            jComboBox1.setSelectedIndex(0);
            jComboBox1.revalidate();
            jComboBox1.repaint();
        } else {
            jComboBox1.setSelectedItem(g.getChoice());
        }
        ((ObjectInspectorTableModel)jTable1.getModel()).fillData();
        jButton1.setEnabled(g.getChoice() != null);
        jButton4.setEnabled(g.getChoice() != null); 
    }

   
}
